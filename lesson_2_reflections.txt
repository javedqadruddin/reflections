What happens when you initialize a repository? Why do you need to do it?
It creates the .git directory to store the metadata for your project and lets you type in the various git commands in that direcotry to save information to the .git directory

Git has a staging area to let you commit indiv files or only a certain group of files if you don't want commit everything in the directory  
	git add 
	and to check what has been staged, you do git status


How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is just the things from the repository that you want to have in your next commit
It gives you the ability to avoid committing everything in the repo if you don't want to, so it gives nice flexibility if you're still working on some files, but want to commit some changes from files you've completed working on and are logically distinct from the files you're still working on

git diff without arguments will give you differences btwn the directory and the staging area (note, if there's nothign in the staging area, it effectively shows u the idfferences in directory since last commit)
git diff --staged will give you the differences between the staged stuff and the prior commit


How can you use the staging area to make sure you have one commit per logical change?
Even if you changed multiple things, you can commit only those things that fit in a logical grouping. 
You could then immediately commit other files that are in a different logical grouping without making any further changes if you wanted.

Branches are labels for commits that move to the latest commit as you make it
	-You can have multiple branch labels attached to a single commit, but the only branch label that will move with a new commit is the one that is currently checked out
	-Combining two commits is called merging
	-git branch [name] makes a new branch
	-git branch with no arguments shows u all your branches, with a star next to the one currrently checked out

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches are useful when you want to go see what it'd be like to go in a different direction while continuing to move forward on the original too. 
	Lets you move forward on different approaches simultaneously

